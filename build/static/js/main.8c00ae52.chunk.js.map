{"version":3,"sources":["reducers/actionTypes.ts","reducers/userInfoReducer.ts","reducers/blockersReducer.ts","context/initialState.ts","reducers/selectedDateReducer.ts","reducers/authReducer.ts","reducers/rootReducer.ts","context/ComponentContext.tsx","services/storage.ts","api/blockers.ts","services/blockers.ts","components/BlockerForm.tsx","components/ChatMessages.tsx","components/ChatInput.tsx","components/Chat.tsx","api/auth.ts","services/auth.ts","components/Header.tsx","components/Calendar.tsx","components/BlockerCard.tsx","components/Blockers.tsx","components/AuthForm.tsx","App.tsx","index.js"],"names":["ActionTypes","userInfoReducer","state","action","type","SET_USER","payload","blockersReducer","SET_BLOCKERS","initialState","userInfo","name","email","id","blockers","selectedDate","Date","isAuthenticated","loginError","selectedDateReducer","SET_DATE","SET_IS_AUTHENTICATED","SET_AUTH_ERROR","authenticatedReducer","authErrorReducer","rootReducer","RESET","sessionStorage","removeItem","combineReducers","ComponentContext","createContext","dispatch","ComponentProvider","children","store","useStorageReducer","Provider","value","useComponentContext","useContext","localStorage","window","set","label","item","setItem","get","getItem","BASE_URL","process","getBlockers","url","axios","deleteBlocker","blockerId","token","method","headers","createBlocker","blocker","ticket","data","JSON","stringify","getAllBlockers","console","log","error","removeBlocker","updatedBlockers","filter","_id","addBlocker","BlockerForm","userName","useState","setName","setblocker","setTicket","className","TextField","sx","minWidth","placeholder","onChange","event","target","variant","multiline","Button","onClick","marginLeft","marginTop","ChatMessages","messages","length","List","map","i","align","ListItem","Grid","container","xs","ListItemText","textAlign","primary","message","secondary","Divider","ChatInput","inputValue","setInputValue","sendMessage","InputBase","ml","flex","inputProps","e","orientation","IconButton","color","p","socket","io","reconnectionDelay","reconnection","transports","agent","upgrade","rejectUnauthorized","Chat","setMessages","useEffect","once","currentTime","moment","format","emit","time","login","password","body","me","create","setUserInfo","checkAuth","logoutUser","loginUser","formData","clear","createUser","response","Header","Box","flexGrow","AppBar","position","Toolbar","size","edge","mr","Typography","component","Calendar","LocalizationProvider","dateAdapter","AdapterDayjs","StaticDatePicker","displayStaticWrapperAs","openTo","date","renderInput","params","BlockerCard","CardContent","width","CardActions","Blockers","createdAt","toDateString","renderBlockers","AuthForm","errorInitialValues","text","display","setEmail","setPassword","isLogin","setIsLogin","signUpErrors","setSignUpErrors","buttonDisabled","buttonText","toggleButtonText","handleClick","errors","errorMessages","reduce","newObj","param","msg","helpText","marginBottom","helperText","disabled","height","App","renderApp","require","config","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8c00ae52.chunk.js","sourcesContent":["export type ActionMap<M extends { [index: string]: any }> = {\n  [Key in keyof M]: M[Key] extends undefined ? { type: Key } : { type: Key; payload: M[Key] };\n};\n\nexport enum ActionTypes {\n  SET_IS_AUTHENTICATED = \"SET_IS_AUTHENTICATED\",\n  SET_AUTH_ERROR = \"SET_AUTH_ERROR\",\n  SET_BLOCKERS = \"SET_BLOCKERS\",\n  SET_DATE = \"SET_DATE\",\n  SET_USER = \"SET_USER\",\n  RESET = \"RESET\",\n}\n\nexport type Actions =\n  | RootActions\n  | AuthActions\n  | BlockerActions\n  | DateActions\n  | UserActions\n\n// Root\ntype RootPayload = {\n  [ActionTypes.RESET]: boolean\n}\n\ntype RootActions = ActionMap<RootPayload>[keyof ActionMap<RootPayload>]\n\n// Auth\ntype AuthPayload = {\n  [ActionTypes.SET_IS_AUTHENTICATED]: boolean,\n  [ActionTypes.SET_AUTH_ERROR]: boolean,\n}\n\ntype AuthActions = ActionMap<AuthPayload>[keyof ActionMap<AuthPayload>]\n\n// Blockers\ntype BlockerPayload = {\n  [ActionTypes.SET_BLOCKERS]: Array<{ name: string, blocker: string, ticket: string, createdAt: Date }>\n}\n\ntype BlockerActions = ActionMap<BlockerPayload>[keyof ActionMap<BlockerPayload>]\n\n// Selected Date\ntype DatePayload = {\n  [ActionTypes.SET_DATE]: Date\n}\n\ntype DateActions = ActionMap<DatePayload>[keyof ActionMap<DatePayload>]\n\n// User\ntype UserPayload = {\n  [ActionTypes.SET_USER]: { name: string, email: string, id: string }\n}\n\ntype UserActions = ActionMap<UserPayload>[keyof ActionMap<UserPayload>];","import { Actions, ActionTypes } from './actionTypes';\nimport { User } from '../types'\n\nexport const userInfoReducer = (state: User, action: Actions) => {\n  if (action.type === ActionTypes.SET_USER) {\n    return action.payload\n  }\n\n  return state;\n};\n","import { Actions, ActionTypes } from './actionTypes';\nimport { Blocker } from '../types'\n\nexport const blockersReducer = (state: Blocker[], action: Actions) => {\n  if (action.type === ActionTypes.SET_BLOCKERS) {\n    return action.payload;\n  }\n\n  return state;\n}","import { Blocker } from '../types';\n\nexport interface InitialStateType {\n  userInfo: {\n    name: string,\n    email: string,\n    id: string\n  },\n  blockers: Blocker[],\n  selectedDate: Date,\n  isAuthenticated: boolean,\n  loginError: boolean\n}\n\nexport const initialState: InitialStateType = {\n  userInfo: {\n    name: \"\",\n    email: \"\",\n    id: \"\",\n  },\n  blockers: [],\n  selectedDate: new Date(),\n  isAuthenticated: false,\n  loginError: false,\n};\n","import { Actions, ActionTypes } from './actionTypes';\n\nexport const selectedDateReducer = (state: Date, action: Actions) => {\n  if (action.type === ActionTypes.SET_DATE) {\n    return action.payload;\n  }\n\n  return state;\n};\n","import { Actions, ActionTypes } from './actionTypes';\nconst { SET_IS_AUTHENTICATED, SET_AUTH_ERROR } = ActionTypes;\n\nexport const authenticatedReducer = (state: boolean, action: Actions) => {\n  if (action.type === SET_IS_AUTHENTICATED) {\n    return action.payload;\n  }\n\n  return state;\n}\n\nexport const authErrorReducer = (state: boolean, action: Actions) => {\n  if (action.type === SET_AUTH_ERROR) {\n    return action.payload;\n  }\n\n  return state;\n}\n","import { userInfoReducer } from \"./userInfoReducer\";\nimport { blockersReducer } from \"./blockersReducer\";\nimport { initialState, InitialStateType } from \"../context/initialState\";\nimport { selectedDateReducer } from \"./selectedDateReducer\";\nimport { authenticatedReducer, authErrorReducer } from \"./authReducer\";\nimport { ActionTypes } from \"./actionTypes\";\nimport { Actions } from \"./actionTypes\";\n\nconst combineReducers = (\n  { userInfo, blockers, selectedDate, isAuthenticated, loginError }: InitialStateType,\n  action: Actions\n) => ({\n  userInfo: userInfoReducer(userInfo, action),\n  blockers: blockersReducer(blockers, action),\n  selectedDate: selectedDateReducer(selectedDate, action),\n  isAuthenticated: authenticatedReducer(isAuthenticated, action),\n  loginError: authErrorReducer(loginError, action),\n});\n\nconst rootReducer = (state: InitialStateType, action: Actions) => {\n  if (action.type === ActionTypes.RESET) {\n    sessionStorage.removeItem(process.env.SESSION_STORAGE_KEY || '');\n    return {\n      ...initialState,\n    };\n  }\n  return combineReducers(state, action);\n};\n\nexport default rootReducer;\n","import React, { createContext, useContext, ReactNode, Dispatch } from 'react';\nimport { useStorageReducer } from 'react-storage-hooks';\nimport rootReducer from '../reducers/rootReducer';\nimport { initialState, InitialStateType } from './initialState';\nimport { Actions } from '../reducers/actionTypes';\n\nconst SESSION_STORAGE_KEY = process.env.SESSION_STORAGE_KEY || '';\n\nexport type ContextDispatch = Dispatch<Actions>;\n\nexport interface ContextType {\n  state: InitialStateType,\n  dispatch: ContextDispatch,\n}\n\nexport const ComponentContext = createContext<ContextType>({\n  state: initialState,\n  dispatch: () => null,\n});\n\ninterface ComponentProviderProps {\n  children: ReactNode,\n  store?: InitialStateType\n}\n\nconst ComponentProvider = ({ children, store = initialState}: ComponentProviderProps) => {\n  const [state, dispatch] = useStorageReducer(sessionStorage, SESSION_STORAGE_KEY, rootReducer, store);\n\n  return <ComponentContext.Provider value={{ state, dispatch }}>{children}</ComponentContext.Provider>\n};\n\nconst useComponentContext = () => useContext(ComponentContext);\n\nexport { useComponentContext, ComponentProvider };\n","const { localStorage } = window;\n\nexport const set = (label: string, item: any) => {\n  localStorage.setItem(label, item);\n};\n\nexport const get = (label: string) => {\n  return localStorage.getItem(label) || '';\n};\n\nexport const clear = () => {\n  localStorage.clear();\n};\n","import axios from 'axios';\nimport { get } from \"../services/storage\";\nconst BASE_URL = process.env.BASE_URL\n\ntype CreateBlockerProps = {\n  name: string,\n  blocker: string,\n  ticket: string,\n}\n\nexport const getBlockers = async () => {\n  const url = `${BASE_URL}/blocker/get-all`\n  return axios(url)\n};\n\nexport const deleteBlocker = async (blockerId: string) => {\n  const token = get(\"token\");\n  const url = `${BASE_URL}/blocker/${blockerId}`;\n  return axios({\n    method: \"DELETE\",\n    headers: {\n      token\n    },\n    url\n  })\n};\n\nexport const createBlocker = async ({ name, blocker, ticket }: CreateBlockerProps) => {\n  const token = get(\"token\");\n  const data = JSON.stringify({ name: name, blocker: blocker, ticket: ticket });\n\n  const url = `${BASE_URL}/blocker/create`;\n  return axios({\n    method: \"POST\",\n    url,\n    headers: {\n      token,\n      \"Content-Type\": \"application/json\",\n    },\n    data,\n  })\n};\n","import { getBlockers, deleteBlocker, createBlocker } from \"../api/blockers\";\nimport { ActionTypes } from '../reducers/actionTypes'\nimport { ContextDispatch } from '../context/ComponentContext';\nimport { Blocker } from '../types';\n\nconst { SET_BLOCKERS } = ActionTypes\n\nexport type AddBlockerProps = {\n  name: string,\n  blocker: string,\n  ticket: string,\n  dispatch: ContextDispatch\n}\n\nexport const getAllBlockers = async (dispatch: ContextDispatch) => {\n  try {\n    const { data: blockers } = await getBlockers();\n    console.log('DATA', blockers)\n    dispatch({ type: SET_BLOCKERS, payload: blockers });\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nexport const removeBlocker = async (blockerId: string, dispatch: ContextDispatch, blockers: Blocker[]) => {\n  try {\n    await deleteBlocker(blockerId);\n    const updatedBlockers = blockers.filter(\n      (blocker) => blocker._id !== blockerId\n    );\n    dispatch({ type: SET_BLOCKERS, payload: updatedBlockers });\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nexport const addBlocker = async ({ name, blocker, ticket, dispatch }: AddBlockerProps) => {\n  try {\n    await createBlocker({ name, blocker, ticket });\n    getAllBlockers(dispatch);\n  } catch (err) {\n    console.error(err);\n  }\n};\n","import React, { useState } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport { useComponentContext } from \"../context/ComponentContext\";\nimport { addBlocker } from \"../services/blockers\";\n\ntype Event = React.ChangeEvent<HTMLInputElement>\n\nexport const BlockerForm = () => {\n  const {\n    dispatch,\n    state: {\n      userInfo: { name: userName },\n    },\n  } = useComponentContext();\n\n  const [name, setName] = useState(userName);\n  const [blocker, setblocker] = useState(\"\");\n  const [ticket, setTicket] = useState(\"\");\n\n  const handleNameChange = (event: Event) => {\n    setName(event.target.value);\n  };\n\n  const handleBlockerChange = (event: Event) => {\n    setblocker(event.target.value);\n  };\n\n  const handleTicketChange = (event: Event) => {\n    setTicket(event.target.value);\n  };\n\n  const handleClick = () => {\n    addBlocker({ name, blocker, ticket, dispatch });\n    setName(userName || \"\");\n    setblocker(\"\");\n    setTicket(\"\");\n  };\n\n  return (\n    <div className=\"input-form-wrapper\">\n      <TextField\n        sx={{ minWidth: 230 }}\n        id=\"name-input\"\n        label=\"Name\"\n        placeholder=\"Name\"\n        value={name}\n        onChange={handleNameChange}\n        variant=\"standard\"\n      />\n      <TextField\n        sx={{ minWidth: 230 }}\n        id=\"blocker-input\"\n        label=\"Blocker\"\n        placeholder=\"Blocker\"\n        multiline\n        value={blocker}\n        onChange={handleBlockerChange}\n        variant=\"standard\"\n      />\n      <TextField\n        sx={{ minWidth: 230 }}\n        id=\"ticket-input\"\n        label=\"Ticket\"\n        placeholder=\"Ticket\"\n        multiline\n        value={ticket}\n        onChange={handleTicketChange}\n        variant=\"standard\"\n      />\n      <Button\n        id=\"submit-button\"\n        onClick={handleClick}\n        sx={{ marginLeft: 1, marginTop: 2 }}\n        variant=\"contained\"\n      >\n        Submit\n      </Button>\n    </div>\n  );\n};\n","import { Divider, Grid, List, ListItem, ListItemText } from '@mui/material';\nimport React from 'react';\n\ntype ChatMessagesProps = {\n  messages: Array<{ name: string, message: string }>\n  userName: string\n}\n\nexport const ChatMessages = ({ messages, userName }: ChatMessagesProps) => {\n\n  const renderMessages = () => (\n    messages.map((item, i) => {\n      const align = item.name === userName ? \"right\" : \"left\";\n      return (\n        <ListItem key={`${i}-${userName}`}>\n          <Grid container>\n            <Grid item xs={12}>\n              <ListItemText\n                sx={{ textAlign: align }}\n                primary={item.message}\n              ></ListItemText>\n            </Grid>\n            <Grid item xs={12}>\n              <ListItemText\n                sx={{ textAlign: align }}\n                secondary={item.name}\n              ></ListItemText>\n            </Grid>\n          </Grid>\n        </ListItem>\n      );\n    })\n  )\n\n  if (!messages.length) return null;\n\n  return (\n    <div className=\"chat-section\">\n      <List className=\"chat-section--message-area\">{renderMessages()}</List>\n      <Divider />\n    </div>\n  );\n}","import React from 'react';\nimport { Divider, IconButton, InputBase } from '@mui/material';\nimport SendIcon from \"@mui/icons-material/Send\";\n\ntype ChatInputProps = {\n  inputValue: string;\n  setInputValue: (value: string) => void;\n  sendMessage: (message: string) => void;\n}\n\nexport const ChatInput = ({ inputValue, setInputValue, sendMessage}: ChatInputProps) => {\n  return (\n    <div className=\"chat--input-wrapper\">\n      <InputBase\n        sx={{ ml: 1, flex: 1 }}\n        placeholder=\"Message The Group\"\n        inputProps={{ \"aria-label\": \"search google maps\" }}\n        value={inputValue}\n        onChange={(e) => setInputValue(e.target.value)}\n      />\n      <Divider orientation=\"vertical\" />\n      <IconButton\n        color=\"primary\"\n        sx={{ p: \"10px\" }}\n        aria-label=\"directions\"\n        onClick={() => {\n          // @ts-ignore TS2345\n          sendMessage(inputValue);\n          setInputValue(\"\");\n        }}\n      >\n        <SendIcon />\n      </IconButton>\n    </div>\n  );\n}","import React, { useEffect, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport moment from \"moment\";\nimport { ChatMessages } from \"./ChatMessages\";\nimport { ChatInput } from \"./ChatInput\";\nimport { useComponentContext } from \"../context/ComponentContext\";\n\nimport \"./styles/componentStyles.css\";\n\ntype Message = {\n  name: string,\n  message: string,\n  time: string\n}\n\nconst BASE_URL = process.env.BASE_URL || '';\n\nconst socket = io(BASE_URL, {\n  reconnectionDelay: 1000,\n  reconnection: true,\n  transports: [\"websocket\"],\n  agent: false,\n  upgrade: false,\n  rejectUnauthorized: false,\n});\n\nexport const Chat = () => {\n  const {\n    state: {\n      userInfo: { name },\n    },\n  } = useComponentContext();\n  const [inputValue, setInputValue] = useState<string>(\"\");\n  const [messages, setMessages] = useState<Message[]>([]);\n\n  useEffect(() => {\n    socket.once(\"message\", (data) => {\n      setMessages([...messages, data]);\n    });\n  }, [messages]);\n\n  const sendMessage = (message: string) => {\n    const currentTime = moment(new Date());\n    currentTime.format(\"HH:mm:ss\");\n    socket.emit(\"message\", {\n      message,\n      time: currentTime.format(\"hh:mm a\"),\n      name: name,\n    });\n  };\n\n  return (\n    <div className=\"chat\">\n      <ChatMessages userName={name} messages={messages} />\n      <ChatInput inputValue={inputValue} setInputValue={setInputValue} sendMessage={sendMessage}/>\n    </div>\n  );\n};\n","import axios from 'axios';\nimport { get } from \"../services/storage\";\nconst BASE_URL = process.env.BASE_URL\n\nexport type CreateArgs = {\n  name: string;\n  email: string;\n  password: string;\n}\n\ntype LoginArgs = {\n  email: string;\n  password: string;\n}\n\nexport const login = async ({ email, password }: LoginArgs) => {\n  const body = JSON.stringify({ email: email, password: password });\n  const url = `${BASE_URL}/user/login`;\n  return axios({\n    method: 'POST',\n    url,\n    data: body,\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  })\n};\n\nexport const me = async () => {\n  const token = get(\"token\");\n  const url = `${BASE_URL}/user/me`\n  return axios({\n    method: 'GET',\n    url,\n    headers: {\n      token\n    }\n  });\n};\n\nexport const create = ({ name, email, password }: CreateArgs) => {\n  const body = JSON.stringify({ name, email, password });\n  const url = `${BASE_URL}/user/signup`;\n\n  return axios({\n    method: \"POST\",\n    url,\n    data: body,\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  })\n}\n","import { me } from \"../api/auth\";\nimport { ActionTypes } from \"../reducers/actionTypes\";\nimport { ContextDispatch } from '../context/ComponentContext';\nimport { login, create } from \"../api/auth\";\nimport { set, clear } from '../services/storage';\n\ntype CreateProps = {\n  name: string;\n  email: string;\n  password: string;\n  dispatch: ContextDispatch\n}\n\ntype LoginProps = {\n  email: string;\n  password: string;\n  dispatch: ContextDispatch;\n}\n\nconst { SET_IS_AUTHENTICATED, SET_USER } = ActionTypes;\n\nconst setUserInfo = (name: string, email: string, id: string, dispatch: ContextDispatch) => {\n  dispatch({ type: SET_USER, payload: { name: name, email, id } });\n}\n\nexport const checkAuth = async (dispatch: ContextDispatch) => {\n  try {\n    const { data } = await me();\n    type UserInfo = {\n      name: string,\n      id: string,\n      email: string,\n    }\n\n    if (data) {\n      const { id, name, email }: UserInfo = data;\n      setUserInfo(name, email, id, dispatch);\n      dispatch({ type: SET_IS_AUTHENTICATED, payload: true });\n    }\n\n  } catch (err) {\n    logoutUser(dispatch);\n    console.error(err);\n  }\n};\n\nexport const loginUser = async ({ email, password, dispatch }: LoginProps) => {\n  const formData = { email, password }\n  try {\n    const { data } = await login(formData);\n    const { token, name, email, id } = data;\n\n\n    set(\"token\", token);\n    setUserInfo(name, email, id, dispatch);\n    dispatch({ type: ActionTypes.SET_IS_AUTHENTICATED, payload: true });\n  } catch (err) {\n    logoutUser(dispatch);\n    dispatch({ type: ActionTypes.SET_AUTH_ERROR, payload: true })\n  }\n}\n\nexport const logoutUser = (dispatch: ContextDispatch) => {\n  clear();\n  dispatch({ type: ActionTypes.SET_IS_AUTHENTICATED, payload: false });\n  dispatch({ type: ActionTypes.RESET, payload: true })\n}\n\nexport const createUser = async ({ name, email, password, dispatch }: CreateProps) => {\n  const formData = { name, email, password }\n  try {\n    const { data } = await create(formData);\n    const { token, name, email, _id } = data;\n\n\n    set(\"token\", token);\n    setUserInfo(name, email, _id, dispatch);\n    dispatch({ type: ActionTypes.SET_IS_AUTHENTICATED, payload: true });\n    return data\n\n  } catch (err: any) {\n    return err.response;\n  }\n\n\n}\n","import * as React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport IconButton from \"@mui/material/IconButton\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport { useComponentContext } from \"../context/ComponentContext\";\nimport { logoutUser } from \"../services/auth\";\n\nexport const Header = () => {\n  const { dispatch, state: { isAuthenticated } } = useComponentContext();\n\n  const renderLogout = () => {\n    if (!isAuthenticated) return null;\n\n    return (\n      <Button id=\"logout-button\" onClick={() => logoutUser(dispatch)} color=\"inherit\">\n        Logout\n      </Button>\n    )\n  }\n\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            size=\"large\"\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"menu\"\n            sx={{ mr: 2 }}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n            Speedy Standup\n          </Typography>\n          {renderLogout()}\n        </Toolbar>\n      </AppBar>\n    </Box>\n  );\n};\n","import * as React from \"react\";\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { StaticDatePicker, LocalizationProvider } from '@mui/x-date-pickers';\nimport { useComponentContext } from \"../context/ComponentContext\";\nimport { ActionTypes } from \"../reducers/actionTypes\";\nimport { TextField } from \"@mui/material\";\n\nexport const Calendar = () => {\n  const {\n    dispatch,\n    state: { selectedDate },\n  } = useComponentContext();\n\n  return (\n    <LocalizationProvider dateAdapter={AdapterDayjs}>\n      <StaticDatePicker\n        displayStaticWrapperAs=\"desktop\"\n        openTo=\"day\"\n        value={selectedDate}\n        onChange={(selectedDate) => {\n          const date = new Date(selectedDate || '');\n          dispatch({ type: ActionTypes.SET_DATE, payload: date })\n        }}\n        renderInput={(params) => <TextField {...params} />}\n      />\n    </LocalizationProvider>\n  );\n};\n","import * as React from \"react\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport IconButton from \"@mui/material/IconButton\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\n\nimport \"./styles/componentStyles.css\";\n\ntype BlockerCardProps = {\n  name: string,\n  blocker: string,\n  ticket: string,\n  deleteBlocker: () => void\n}\n\nexport const BlockerCard = ({ name, blocker, ticket, deleteBlocker }: BlockerCardProps) => {\n  return (\n    <div className=\"blocker-card\">\n      <CardContent>\n        <Typography variant=\"h5\" component=\"div\">\n          {name}\n        </Typography>\n        <Typography variant=\"body2\" component=\"div\" sx={{ width: 250 }}>\n          {blocker}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button size=\"small\">{ticket}</Button>\n        <IconButton data-testid=\"delete-button\" onClick={deleteBlocker} aria-label=\"delete\">\n          <DeleteIcon/>\n        </IconButton>\n      </CardActions>\n    </div>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { BlockerCard } from \"./BlockerCard\";\nimport { useComponentContext } from \"../context/ComponentContext\";\nimport { getAllBlockers, removeBlocker } from \"../services/blockers\";\n\nexport const Blockers = () => {\n  const {\n    dispatch,\n    state: { blockers, selectedDate },\n  } = useComponentContext();\n\n  useEffect(() => {\n    getAllBlockers(dispatch);\n  }, [dispatch]);\n\n  const renderBlockers = () => {\n    if (blockers.length) {\n      return blockers\n        .filter(\n          (item) =>\n            new Date(item.createdAt).toDateString() ===\n            new Date(selectedDate).toDateString()\n        )\n        .map((blocker) => {\n          return (\n            <div>\n              <BlockerCard\n                name={blocker.name}\n                blocker={blocker.blocker}\n                ticket={blocker.ticket}\n                deleteBlocker={() =>\n                  removeBlocker(blocker._id || '', dispatch, blockers)\n                }\n              />\n            </div>\n          );\n        });\n    }\n  };\n\n  return <div data-testid=\"blockers-container\" className=\"blockers-container\">{renderBlockers()}</div>;\n};\n","import React, { useState } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport { createUser, loginUser } from \"../services/auth\";\nimport { useComponentContext } from \"../context/ComponentContext\";\n\nimport \"./styles/componentStyles.css\";\n\ntype Event = React.ChangeEvent<HTMLInputElement>\n\nexport const AuthForm = () => {\n  const errorInitialValues = {\n    email: {\n      text: '',\n      display: false,\n    },\n    password: {\n      text: '',\n      display: false\n    },\n    name: {\n      text: '',\n      display: false,\n    }\n  }\n  const { dispatch, state: { loginError } } = useComponentContext();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [isLogin, setIsLogin] = useState(true);\n  const [signUpErrors, setSignUpErrors] = useState(errorInitialValues)\n\n  const buttonDisabled = !isLogin ? !email || !password || !name : !email || !password;\n  const buttonText = isLogin ? \"Login\" : \"Sign Up\";\n  const toggleButtonText = isLogin ? 'Sign Up' : 'Login';\n\n  const handleEmailChange = (event: Event) => {\n    setEmail(event.target.value);\n  };\n\n  const handlePasswordChange = (event: Event) => {\n    setPassword(event.target.value);\n  };\n\n  const handleNameChange = (event: Event) => {\n    setName(event.target.value);\n  };\n\n  const handleClick = async () => {\n    if (isLogin) {\n      loginUser({ email, password, dispatch })\n    } else {\n      const { data } = await createUser({ email, password, name, dispatch });\n      if (data && data.errors) {\n        const errorMessages = data.errors.reduce((newObj: object, error: { param: string, msg: string }) => {\n          // @ts-ignore\n          newObj[error.param] = { text: error.msg, display: true }\n          return newObj;\n        }, {});\n        setSignUpErrors({...errorInitialValues, ...errorMessages})\n      }\n    }\n  };\n\n  const helpText = loginError ? 'Incorrect Combination of Email and Password' : signUpErrors.password.text;\n\n  return (\n    <div className=\"login\">\n      {!isLogin && <TextField\n        error={signUpErrors.name.display}\n        className=\"login--input\"\n        sx={{ marginBottom: 2 }}\n        id=\"name-input\"\n        label=\"Name\"\n        placeholder=\"Name\"\n        value={name}\n        type=\"string\"\n        onChange={handleNameChange}\n        variant=\"outlined\"\n        helperText={signUpErrors.name.text}\n      />}\n      <TextField\n        error={signUpErrors.email.display || loginError}\n        className=\"login--input\"\n        sx={{ marginBottom: 2 }}\n        id=\"email-input\"\n        label=\"Email\"\n        placeholder=\"Email\"\n        value={email}\n        onChange={handleEmailChange}\n        variant=\"outlined\"\n        helperText={signUpErrors.email.text}\n      />\n      <TextField\n        error={signUpErrors.password.display || loginError}\n        className=\"login--input\"\n        id=\"password-input\"\n        label=\"Password\"\n        placeholder=\"Password\"\n        value={password}\n        type=\"password\"\n        onChange={handlePasswordChange}\n        variant=\"outlined\"\n        helperText={helpText}\n      />\n      <Button\n        disabled={buttonDisabled}\n        onClick={handleClick}\n        className=\"login--input\"\n        sx={{ marginTop: 2, height: 40 }}\n        variant=\"contained\"\n      >\n        {buttonText}\n      </Button>\n      <Button onClick={() => setIsLogin(!isLogin)}>{toggleButtonText}</Button>\n    </div>\n  );\n}","import React, { useEffect } from \"react\";\nimport { BlockerForm } from \"./components/BlockerForm\";\nimport { Chat } from \"./components/Chat\";\nimport { Header } from \"./components/Header\";\nimport { Calendar } from \"./components/Calendar\";\nimport { Blockers } from \"./components/Blockers\";\nimport { useComponentContext } from \"./context/ComponentContext\";\nimport { checkAuth } from \"./services/auth\";\nimport { AuthForm } from './components/AuthForm';\n\nimport \"./App.css\";\n\nconst App = () => {\n  const {\n    dispatch,\n    state: { isAuthenticated },\n  } = useComponentContext();\n\n  useEffect(() => {\n    checkAuth(dispatch);\n  }, [dispatch]);\n\n  const renderApp = () => {\n    if (isAuthenticated) {\n      return (\n        <div className=\"inner-app\">\n          <div className=\"blocker-wrapper\">\n            <BlockerForm />\n            <Blockers />\n          </div>\n          <div className=\"chat-wrapper\">\n            <Calendar />\n            <Chat />\n          </div>\n        </div>\n      );\n    }\n  };\n\n  return (\n    <div>\n      {<Header />}\n      {!isAuthenticated && <AuthForm />}\n      {renderApp()}\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { ComponentProvider } from \"./context/ComponentContext\";\nrequire(\"dotenv\").config();\n\nReactDOM.render(\n  <React.StrictMode>\n    <ComponentProvider>\n      <App />\n    </ComponentProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}